

spring.application.name=${SPRING_APPLICATION_NAME:authservice}

# ======================
# Database Configuration
# ======================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# ======================
# JWT Configuration
# ======================
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# ======================
# App Defaults
# ======================
app.default.role=${APP_DEFAULT_ROLE}
app.base.google.redirect.url=${APP_BASE_FRONTEND_REDIRECT}
app.base.gmail.redirect.url=${APP_BASE_GMAIL_REDIRECT_URL}
app.base.backend.redirect=${APP_BASE_BACKEND_REDIRECT}

# ======================
# Google OAuth2 (Login)
# ======================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Add refresh token support automatically
spring.security.oauth2.client.provider.google.additional-parameters.access_type=offline
spring.security.oauth2.client.provider.google.additional-parameters.prompt=consent

# ======================
# Gmail OAuth2 (for Gmail Readonly Access)
# ======================
spring.security.oauth2.client.registration.gmail.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.gmail.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.gmail.scope=https://www.googleapis.com/auth/gmail.readonly,profile,email,openid
spring.security.oauth2.client.registration.gmail.redirect-uri=http://localhost:8080/login/oauth2/code/gmail
spring.security.oauth2.client.registration.gmail.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.gmail.client-name=Gmail
spring.security.oauth2.client.registration.gmail.provider=google